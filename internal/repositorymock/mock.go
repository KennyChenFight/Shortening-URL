// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KennyChenFight/Shortening-URL/pkg/repository (interfaces: Repository)

// Package repositorymock is a generated GoMock package.
package repositorymock

import (
	reflect "reflect"

	business "github.com/KennyChenFight/Shortening-URL/pkg/business"
	dao "github.com/KennyChenFight/Shortening-URL/pkg/dao"
	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// BatchCreateKeys mocks base method.
func (m *MockRepository) BatchCreateKeys(arg0 int) (int, *business.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchCreateKeys", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(*business.Error)
	return ret0, ret1
}

// BatchCreateKeys indicates an expected call of BatchCreateKeys.
func (mr *MockRepositoryMockRecorder) BatchCreateKeys(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchCreateKeys", reflect.TypeOf((*MockRepository)(nil).BatchCreateKeys), arg0)
}

// CreateShorteningURL mocks base method.
func (m *MockRepository) CreateShorteningURL(arg0 string) (*dao.URL, *business.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShorteningURL", arg0)
	ret0, _ := ret[0].(*dao.URL)
	ret1, _ := ret[1].(*business.Error)
	return ret0, ret1
}

// CreateShorteningURL indicates an expected call of CreateShorteningURL.
func (mr *MockRepositoryMockRecorder) CreateShorteningURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShorteningURL", reflect.TypeOf((*MockRepository)(nil).CreateShorteningURL), arg0)
}

// DeleteShorteningURL mocks base method.
func (m *MockRepository) DeleteShorteningURL(arg0 string) *business.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShorteningURL", arg0)
	ret0, _ := ret[0].(*business.Error)
	return ret0
}

// DeleteShorteningURL indicates an expected call of DeleteShorteningURL.
func (mr *MockRepositoryMockRecorder) DeleteShorteningURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShorteningURL", reflect.TypeOf((*MockRepository)(nil).DeleteShorteningURL), arg0)
}

// GetOriginalURL mocks base method.
func (m *MockRepository) GetOriginalURL(arg0 string) (string, *business.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*business.Error)
	return ret0, ret1
}

// GetOriginalURL indicates an expected call of GetOriginalURL.
func (mr *MockRepositoryMockRecorder) GetOriginalURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalURL", reflect.TypeOf((*MockRepository)(nil).GetOriginalURL), arg0)
}
